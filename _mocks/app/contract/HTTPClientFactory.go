// Code generated by mockery v2.43.2. DO NOT EDIT.

package contract

import (
	httpclient "myapp/crossCutting/httpclient"
	config "myapp/crossCutting/httpclient/config"

	mock "github.com/stretchr/testify/mock"
)

// HTTPClientFactory is an autogenerated mock type for the HTTPClientFactory type
type HTTPClientFactory struct {
	mock.Mock
}

// Create provides a mock function with given fields: serviceName, _a1
func (_m *HTTPClientFactory) Create(serviceName string, _a1 config.HTTPConfig) httpclient.HTTPClient {
	ret := _m.Called(serviceName, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 httpclient.HTTPClient
	if rf, ok := ret.Get(0).(func(string, config.HTTPConfig) httpclient.HTTPClient); ok {
		r0 = rf(serviceName, _a1)
	} else {
		r0 = ret.Get(0).(httpclient.HTTPClient)
	}

	return r0
}

// NewHTTPClientFactory creates a new instance of HTTPClientFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHTTPClientFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *HTTPClientFactory {
	mock := &HTTPClientFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
